% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seq_motif_finder.R
\name{sh_get_score_matrix}
\alias{sh_get_score_matrix}
\alias{sh_get_score_matrix2}
\title{Get Copy Number Sequence Similarity or Distance Matrix}
\usage{
sh_get_score_matrix(
  x,
  sub_mat,
  block_size = NULL,
  dislike = FALSE,
  cores = 1L,
  verbose = FALSE
)

sh_get_score_matrix2(
  x,
  sub_mat,
  method = c("base", "ff", "bigmemory"),
  verbose = FALSE
)
}
\arguments{
\item{x}{a coding copy number sequence (valid letters are A to X).}

\item{sub_mat}{a substitution matrix, each element indicates a score to plus.
See \code{\link[=sh_build_sub_matrix]{sh_build_sub_matrix()}}.}

\item{block_size}{a block size to aggregrate, this is designed for big data, it means
results from adjacent sequences will be aggregrate by means to reduce the size of result
matrix.}

\item{dislike}{if \code{TRUE}, returns a dissimilarity matrix instead of a similarity matrix.}

\item{cores}{computer cores, default is \code{1}, note it is super fast already, set more
cores typically do not speed up the computation.}

\item{verbose}{if \code{TRUE}, print extra message, note it will slower the computation.}

\item{method}{a method for getting (storing) the results.}
}
\value{
a score matrix.
}
\description{
Get Copy Number Sequence Similarity or Distance Matrix

\code{sh_get_score_matrix2()} is a variant version of \code{sh_get_score_matrix()}. Normally, it worker worse than \code{sh_get_score_matrix()}.
}
\examples{
load(system.file("extdata", "toy_segTab.RData",
  package = "sigminer.helper", mustWork = TRUE
))
x <- sh_coding_segs(segTabs)
x
seqs <- sh_extract_seqs(x$dt)
seqs
mat <- sh_get_score_matrix(seqs$keep, x$mat, verbose = TRUE)
mat[1:5, 1:5]

mat2 <- sh_get_score_matrix2(seqs$keep, x$mat)
identical(mat, mat2)

mat3 <- sh_get_score_matrix(seqs$keep, x$mat, dislike = TRUE)
identical(mat3, 240L - mat)

mat_b <- sh_get_score_matrix(seqs$keep, x$mat, block_size = 2L)
## block1 represents the first 2 sequences
## block2 represents the 3rd, 4th sequences
## ...
mat_b[1:5, 1:5]
\donttest{
if (require("doParallel")) {
  mock_seqs <- sapply(1:10000, function(x) {
    paste(sample(LETTERS[1:24], 5, replace = TRUE), collapse = "")
  })

  system.time(
    y1 <- sh_get_score_matrix(mock_seqs, x$mat, cores = 1)
  )

  system.time(
    y2 <- sh_get_score_matrix(mock_seqs, x$mat, cores = 2)
  )

  all.equal(y1, y2)
}
}
}
